<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Visualka.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5A
        P3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/dA5AP3QOQD90DkA/0rlSqdza2iKFq9VqjUbD
        MGp0DkAV0vnGxsbi4uLOzg5JnQwYZhudA1CFdK7ValtaWiYnJ7u6umQyGcPso3MAqpDOVSrV0tJSaWlp
        fX09GTPMFjoHoIph/3x3d3d6enp5eXl7exv75wC0IZ2vra2RXXRS+NbWFhlwz7fHd5ARANDA0Ln+BTUO
        13lMywrZUyc3A4CxU6vVZBvOJa7HdR5WN88wKsO2XqvVrq+vkzH5CgBvOLIrTsImU3TSrCHbU5ETXOfk
        HzIiyA/09fWRtcmAWwUA3mBkD1wul4+NjZEtObfoGNL8zs4Ow+yQbbmhc/bomdbW1o6ODhK5SqUyrAcA
        bzKyeV5aWpJKpSR1wzFwx5Hp+fj4uG57ObJx0dD5Dlk7Nzd3dXWVPAC8uOkHgDcQSVWn03V3d9fU1JDZ
        O7f0KfIoMDAwcKhaiGpa4ubtJP2JiYna2lpyM+btAEaBtE3m7WR7TsakasNCEj9JmBQtk8n02/OVZ9tz
        dg2yJSdbdbJ/jnk7gFEgPZNmSdgk+GfTcBL84uLiyMjI6Ohof38/tz3P6FpkmF2yi84w2/oB+UrGuOCC
        i1FctPrLySV7q4fL44xm/kg5yTBrku6VC9fSpwVNikDpAi644ELBJaBmnl+7GNq4GtKwTL6GtS1/ly7/
        fzK7/Vb5aEbDAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Skills.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>